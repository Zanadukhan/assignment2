#!/bin/bash

# checks if user is root or script is run with sudo
# learned from: https://serverfault.com/questions/37829/bash-scripting-require-script-to-be-run-as-root-or-with-sudo

if [[ $(/usr/bin/id -u) -ne 0 ]]; then
    echo "Not running as root"
    exit 1
fi


s_arg="/bin/bash"
h_arg=""
g_arg=""

while getopts ":s:h:g:m" opt; do
  case ${opt} in
    s|shell) 
      # Allows the user to specify which shell they want to use
      s_arg=${OPTARG}
    ;;
    h|home)
      # Allows user to specify location of home directory
      h_arg=${OPTARG}
      if [[ ! -d $h_arg ]]; then
        mkdir $h_arg
      fi
    ;;  
    g|group)
      # Allows user to add new user to a group
      # How to replace white space in strings: https://tldp.org/LDP/abs/html/string-manipulation.html
      g_arg=${OPTARG}
      g_arg=${g_arg// /,}
    ;;
    m|man)
      cat <<- EOF
	Usage: 
  
  usercreation [options] <username>

  Description: 
  
  This script allows users to create a new user along with a home directory
  and whatever groups they would like to add the user to.

	Options:

	-m, --man 

	This option displays the manual for this script

	-s, --shell <path/to/shell>

	This allows the user to specify a specific shell for the new user rather than the default shell for users, Bash

	-h, --home <path/to/dir>

	If the user provides an argument, a custom home directory will be created and set for the new user

	-g, --group <group1 group2 group3...>

	additional groups can be specified and the new users will be assigned to those groups

EOF
      exit 0	
      # tells the user what this script does
    ;;
    *)
      cat << EOF
      Invalid arguments, for more information, run this command with
      -m or -man
EOF
      exit 1
    ;;
      # learned how to handle multiline strings from: https://stackoverflow.com/questions/10969953/how-to-output-a-multiline-string-in-bash
    esac
done

#OPTINT used to allow manipulation of non-option arguments
shift $(( $OPTIND - 1 ))

# checks if there's a home option used and set to default home if not
# https://dev.to/dak425/how-to-check-if-a-string-is-empty-in-bash-264l
if [[ -n $h_arg ]]; then
  if [[ -n $g_arg ]]; then
  # if group option has been provided, 
	  useradd -d "$h_arg" -s "$s_arg" -G "$g_arg" "$1"
    chown "$1": "$h_arg"
    exit 0
  fi
   useradd -d "$h_arg" -s "$s_arg" "$1"
   chown "$1": "$h_arg"
else
  #creates default user directory if it doesn't exist
  if [[ ! -d "/home/$1" ]]; then
    mkdir "/home/$1"
    chown "$1": "/home/$1"
    echo directory created
  fi
  # creates user with default values
	  useradd -d "/home/$1" -s "$s_arg" "$1"
    echo user created with default values
fi

